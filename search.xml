<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Java基础语法面试题</title>
    <url>/2022/05/06/Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E9%9D%A2%E8%AF%95%E9%A2%98/</url>
    <content><![CDATA[<h3 id="1-JDK和JRE的区别"><a href="#1-JDK和JRE的区别" class="headerlink" title="1 JDK和JRE的区别"></a>1 JDK和JRE的区别</h3><ul>
<li><p>JRE：JavaRuntimeEnvironment，运行Java程序，包含JVM、Java基础类库。</p>
</li>
<li><p>JDK：Java Development Kit，提供开发环境和运行环境。</p>
<p>包含JRE、编译源文件的编译器Javac、监控工具jconsole和分析工具jvisualvm。</p>
</li>
</ul>
<h3 id="2-x3D-x3D-和equals-的区别"><a href="#2-x3D-x3D-和equals-的区别" class="headerlink" title="2 &#x3D;&#x3D; 和equals()的区别"></a>2 &#x3D;&#x3D; 和equals()的区别</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kuronekofun;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  ==和equals的区别</span></span><br><span class="line"><span class="comment"> *  ==解读：</span></span><br><span class="line"><span class="comment"> *      1.基本类型：值比较</span></span><br><span class="line"><span class="comment"> *      2.引用类型：引用比较(内存地址)</span></span><br><span class="line"><span class="comment"> *      3.不能比较没有父子关系的两个对象</span></span><br><span class="line"><span class="comment"> * equals解读：</span></span><br><span class="line"><span class="comment"> *      1.没有重写equals方法则同==,调用Object类中的equals,引用比较</span></span><br><span class="line"><span class="comment"> *      2.JDK中的类一般重写了equals，值比较</span></span><br><span class="line"><span class="comment"> *      3.String和Integer默认重写了equals方法：值比较</span></span><br><span class="line"><span class="comment"> *      4.重写对象的equals，一般须重写hashcode</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> kuroneko</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Sample01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sx</span> <span class="operator">=</span> <span class="string">&quot;string&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sy</span> <span class="operator">=</span> <span class="string">&quot;string&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sz</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;string&quot;</span>);</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * String是引用类型，==引用比较，</span></span><br><span class="line"><span class="comment">         * 值为string的sx指向常量区中的一个位置xab123</span></span><br><span class="line"><span class="comment">         * y的值为string，和sx一样指向常量区中的xab123</span></span><br><span class="line"><span class="comment">         * so:</span></span><br><span class="line"><span class="comment">         *      true</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(sx == sy);</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * String和Cat是引用类型，==引用比较，Cat没有重写equals，引用比较</span></span><br><span class="line"><span class="comment">         * new关键字会重新开辟内存空间，值虽相同但引用不同</span></span><br><span class="line"><span class="comment">         * so:</span></span><br><span class="line"><span class="comment">         *      都为false</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(sx == sz);</span><br><span class="line">        <span class="type">Cat</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cat</span>(<span class="string">&quot;黑猫&quot;</span>);</span><br><span class="line">        <span class="type">Cat</span> <span class="variable">c2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cat</span>(<span class="string">&quot;黑猫&quot;</span>);</span><br><span class="line">        System.out.println(c1.equals(c2));</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *  String和Integer重写了equals，equals值比较</span></span><br><span class="line"><span class="comment">         *  so：</span></span><br><span class="line"><span class="comment">         *      都为true</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        System.out.println(sx.equals(sy));</span><br><span class="line">        System.out.println(sx.equals(sz));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Object类中equals方法的声明：同&#x3D;&#x3D;，引用比较</p>
<img src="/2022/05/06/Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E9%9D%A2%E8%AF%95%E9%A2%98/image-20220506174814415.png" class="">

<p>String类中equals方法的声明：重写了Object的equals方法，把引用比较改成了值比较</p>
<img src="/2022/05/06/Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E9%9D%A2%E8%AF%95%E9%A2%98/image-20220506180546883.png" class="">

<h3 id="3-hashCode-相同则equals-为true吗"><a href="#3-hashCode-相同则equals-为true吗" class="headerlink" title="3 hashCode()相同则equals()为true吗"></a>3 hashCode()相同则equals()为true吗</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.kuronekofun;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 两个对象的hashCode相同，equals不一定为true</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Sample02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> <span class="string">&quot;通话&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> <span class="string">&quot;重地&quot;</span>;</span><br><span class="line">        System.out.println(String.format(<span class="string">&quot;str1：%d | str2：%d&quot;</span>,  str1.hashCode(),str2.hashCode()));</span><br><span class="line">        System.out.println(str1.equals(str2)); <span class="comment">// String重写了equals,值比较</span></span><br><span class="line">        <span class="comment">/**console</span></span><br><span class="line"><span class="comment">         * str1：1179395 | str2：1179395</span></span><br><span class="line"><span class="comment">         * false</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>Interview</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
</search>
